pipeline {
    agent none

    stages {
        stage( 'build' ) {
            agent {
                docker {
                    image "maven:3.6.1-jdk-8-slim"
                    args "-v /var/jenkins_home/.m2:/root/.m2"
                }
            }
            steps {
                echo 'Compiling worker app'
                dir( 'worker' ) {
                    sh 'mvn compile'
                }        
            }
        }
        stage( 'test' ) {
            agent {
                docker {
                    image "maven:3.6.1-jdk-8-slim"
                    args "-v /var/jenkins_home/.m2:/root/.m2"
                }
            }
            steps {
                echo 'Running Unit Test on worker app'
                dir( 'worker' ) {
                    sh 'mvn clean test'
                }
            }
        }
        stage( 'package' ) {
            agent {
                docker {
                    image "maven:3.6.1-jdk-8-slim"
                    args "-v /var/jenkins_home/.m2:/root/.m2"
                }
            }
            steps {
                echo 'Packaging worker app'
                dir( 'worker' ) {
                    sh 'mvn package -DskipTests'
                }
                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true 
            }
        }
        stage( 'docker-package' ) {
            agent any
            steps {
                echo "Packaging worker app with docker"
                script (
                    docker.withRegistry( "https://index.docker.io/v1", "dockerlogin" ) {
                        def workerImage = docker.build( "jscoon/worker:v${env.BUILD_ID}", "./worker" )
                        workerImage.push()
                        workerImage.push( "latest" )
                    }
                )
            }
        }
    }

    post {
        always {
            echo 'the job is completed..'
        }
    }
}